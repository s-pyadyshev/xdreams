include mixins

block vars
  -
    var baseDir = './'
  -
    var title = typeof title !== 'undefined' ? title : null
    var description = typeof description !== 'undefined' ? description : null
    var image = typeof image !== 'undefined' ? image : null
  -
    var html = {
      attrs: {
        lang: 'en'
      },
      classList: []
    }
  -
    var body = {
      attrs: {},
      classList: []
    }
  -
    var pageWrapperClass = pageWrapperClass
  -
    var meta = {
      appleMobileWebAppCapable: null,
      appleMobileWebAppStatusBarStyle: null,
      appleMobileWebAppTitle: null,
      appleTouchFullscreen: null,
      applicationName: null,
      charset: 'utf-8',
      colorScheme: 'dark light',
      description: description,
      formatDetection: {
        address: true,
        date: true,
        email: true,
        telephone: true
      },
      keywords: [],
      msapplicationTileColor: null,
      msapplicationTileImage: null,
      msapplicationNotification: null,
      msapplicationSquare70x70logo: null,
      msapplicationSquare150x150logo: null,
      msapplicationSquare310x310logo: null,
      msapplicationWide310x150logo: null,
      msapplicationConfig: null,
      ogDescription: description,
      ogImage: image,
      ogImageType: null,
      ogImageWidth: null,
      ogImageHeight: null,
      ogImageAlt: null,
      ogLocale: 'en_GB',
      ogTitle: title,
      ogType: 'website',
      ogUrl: null,
      themeColor: null,
      twitterCard: 'summary_large_image',
      twitterSite: null,
      twitterCreator: null,
      twitterTitle: title,
      twitterDescription: description,
      twitterImage: image,
      viewport: 'width=device-width',
      XUACompatible: 'IE=edge'
    }
  -
    var link = {
      appleTouchIcon: null,
      appleTouchIcon40x40: null,
      appleTouchIcon57x57: null,
      appleTouchIcon58x58: null,
      appleTouchIcon60x60: null,
      appleTouchIcon72x72: null,
      appleTouchIcon76x76: null,
      appleTouchIcon80x80: null,
      appleTouchIcon87x87: null,
      appleTouchIcon114x114: null,
      appleTouchIcon120x120: null,
      appleTouchIcon144x144: null,
      appleTouchIcon152x152: null,
      appleTouchIcon167x167: null,
      appleTouchIcon180x180: null,
      appleTouchIcon1024x1024: null,
      appleTouchIconPrecomposed: null,
      appleTouchIconPrecomposed40x40: null,
      appleTouchIconPrecomposed57x57: null,
      appleTouchIconPrecomposed58x58: null,
      appleTouchIconPrecomposed60x60: null,
      appleTouchIconPrecomposed72x72: null,
      appleTouchIconPrecomposed76x76: null,
      appleTouchIconPrecomposed80x80: null,
      appleTouchIconPrecomposed87x87: null,
      appleTouchIconPrecomposed114x114: null,
      appleTouchIconPrecomposed120x120: null,
      appleTouchIconPrecomposed144x144: null,
      appleTouchIconPrecomposed152x152: null,
      appleTouchIconPrecomposed167x167: null,
      appleTouchIconPrecomposed180x180: null,
      appleTouchIconPrecomposed1024x1024: null,
      icon: null,
      icon16x16: null,
      icon32x32: null,
      icon96x96: null,
      icon128x128: null,
      icon192x192: null,
      icon194x194: null,
      icon196x196: null,
      imageSrc: image,
      manifest: null,
      maskIcon: {
        href: null,
        color: null
      }
    }

doctype html
html(class=html.classList)&attributes(html.attrs)
  head
    block head-start
    block meta
      if meta.charset !== null
        meta(charset!=meta.charset)
      if meta.colorScheme !== null
        meta(color-scheme!=meta.colorScheme)
      if meta.XUACompatible !== null
        meta(http-equiv="X-UA-Compatible" content!=meta.XUACompatible)
      if meta.viewport !== null
        meta(name="viewport" content!=meta.viewport)
      if meta.description !== null
        meta(name="description" content!=meta.description)
      if meta.keywords !== null && !(Array.isArray(meta.keywords) && !meta.keywords.length)
        meta(name="keywords" content!=(Array.isArray(meta.keywords) ? meta.keywords.join(', ') : meta.keywords))
      if meta.ogType !== null && (meta.ogUrl || meta.ogTitle || meta.ogDescription || meta.ogImage)
        meta(property="og:type" content!=meta.ogType)
      if meta.ogUrl !== null
        meta(property="og:url" content!=meta.ogUrl)
      if meta.ogLocale !== null && (meta.ogUrl || meta.ogTitle || meta.ogDescription || meta.ogImage)
        meta(property="og:locale" content!=meta.ogLocale)
      if meta.ogTitle !== null
        meta(property="og:title" content!=meta.ogTitle)
      if meta.ogDescription !== null
        meta(property="og:description" content!=meta.ogDescription)
      if meta.ogImage !== null
        meta(property="og:image" content!=meta.ogImage)
      if meta.ogImageType !== null
        meta(property="og:image:type" content!=meta.ogImageType)
      if meta.ogImageWidth !== null
        meta(property="og:image:width" content!=meta.ogImageWidth)
      if meta.ogImageHeight !== null
        meta(property="og:image:height" content!=meta.ogImageHeight)
      if meta.ogImageAlt !== null
        meta(property="og:image:alt" content!=meta.ogImageAlt)
      if meta.twitterCard !== null && (meta.twitterSite || meta.twitterCreator || meta.twitterTitle || meta.twitterDescription || meta.twitterImage)
        meta(name="twitter:card" content!=meta.twitterCard)
      if meta.twitterSite !== null
        meta(name="twitter:site" content!=meta.twitterSite)
      if meta.twitterCreator !== null
        meta(name="twitter:creator" content!=meta.twitterCreator)
      if meta.twitterTitle !== null
        meta(name="twitter:title" content!=meta.twitterTitle)
      if meta.twitterDescription !== null
        meta(name="twitter:description" content!=meta.twitterDescription)
      if meta.twitterImage !== null
        meta(name="twitter:image" content!=meta.twitterImage)
      if meta.appleMobileWebAppCapable !== null
        meta(name="apple-mobile-web-app-capable" content!=meta.appleMobileWebAppCapable)
      if meta.appleMobileWebAppStatusBarStyle !== null
        meta(name="apple-mobile-web-app-status-bar-style" content!=meta.appleMobileWebAppStatusBarStyle)
      if meta.appleMobileWebAppTitle !== null
        meta(name="apple-mobile-web-app-title" content!=meta.appleMobileWebAppTitle)
      if meta.applicationName !== null
        meta(name="application-name" content!=meta.applicationName)
      if meta.msapplicationTileColor !== null
        meta(name="msapplication-TileColor" content!=meta.msapplicationTileColor)
      if meta.msapplicationTileImage !== null
        meta(name="msapplication-TileImage" content!=meta.msapplicationTileImage)
      if meta.msapplicationSquare70x70logo !== null
        meta(name="msapplication-square70x70logo" content!=meta.msapplicationSquare70x70logo)
      if meta.msapplicationSquare150x150logo !== null
        meta(name="msapplication-square150x150logo" content!=meta.msapplicationSquare150x150logo)
      if meta.msapplicationWide310x150logo !== null
        meta(name="msapplication-wide310x150logo" content!=meta.msapplicationWide310x150logo)
      if meta.msapplicationSquare310x310logo !== null
        meta(name="msapplication-square310x310logo" content!=meta.msapplicationSquare310x310logo)
      if meta.msapplicationNotification !== null
        meta(name="msapplication-notification" content!=meta.msapplicationNotification)
      if meta.msapplicationConfig !== null
        meta(name="msapplication-config" content!=meta.msapplicationConfig)
      if meta.themeColor !== null
        meta(name="theme-color" content!=meta.themeColor)
      if meta.formatDetection !== null && (typeof meta.formatDetection === 'string' || Object.values(meta.formatDetection).some(function (value) { return !value }))
        meta(name="format-detection" content!=(typeof meta.formatDetection === 'string' ? meta.formatDetection : Object.entries(meta.formatDetection).filter(function (entry) { return !entry[1] || entry[1] === 'no' }).map(function (entry) { return `${entry[0]}=no` }).join(',')))
    if title !== null
      title!= title
    block links
      include ./favicon
      link(rel="stylesheet" href!=`${baseDir}css/main.css?v=${Date.now()}`)
    block head-end
  body(class=body.classList)&attributes(body.attrs)
    block body-start
    .page-wrapper(class=pageWrapperClass)
      include ../pug/components/header.pug
      main.main
        block content
      include ../pug/components/footer.pug
    block scripts
      <script src="https://cdn.jsdelivr.net/gh/mdbassit/FancySelect@latest/dist/fancyselect.min.js"></script>
      <script src="https://cdn.jsdelivr.net/npm/gsap@3.12.5/dist/gsap.min.js"></script>
      <script src="https://cdn.jsdelivr.net/npm/gsap@3.12.5/dist/ScrollTrigger.min.js"></script>
      <script src="https://cdn.jsdelivr.net/npm/gsap@3.13/dist/ScrollToPlugin.min.js"></script>
      script(src!=`${baseDir}js/vendor.js?v=${Date.now()}`)
      script(src!=`${baseDir}js/main.js?v=${Date.now()}`)
    block body-end
